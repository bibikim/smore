<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdu.smore.mapper.StudyMapper">

	<select id="selectAllBoardCnt" resultType="int">
		SELECT COUNT(*)
		  FROM S_GROUP
	</select>

	<select id="selectAllList" parameterType="Map" resultType="StudyGroupDTO">
		SELECT A.ROW_NUM, A.STUD_NO, A.NICKNAME, A.TITLE, A.CONTENT, A.CREATE_DATE, A.MODIFY_DATE, A.HIT, A.GENDER, A.REGION, A.WIDO, A.GDO, A.LANG, A.PEOPLE, A.CONTACT, A.STUD_DATE, A.IP
		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY STUD_NO DESC) AS ROW_NUM, STUD_NO, NICKNAME, TITLE, CONTENT, CREATE_DATE, MODIFY_DATE, HIT, GENDER, REGION, WIDO, GDO, LANG, PEOPLE, CONTACT, STUD_DATE, IP
		          FROM S_GROUP B) A
		 WHERE A.ROW_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<insert id="insertStudy" parameterType="StudyGroupDTO">
		INSERT INTO S_GROUP
			(NICKNAME, TITLE, CONTENT, CREATE_DATE, MODIFY_DATE, HIT, GENDER, REGION, WIDO, GDO, LANG, PEOPLE, CONTACT, STUD_DATE, IP)
		VALUES
			(#{nickname}, #{title}, #{content}, NOW(), NOW(), 0, #{gender}, #{region}, #{wido}, #{gdo}, #{lang}, #{people}, #{contact}, NOW(), #{ip})
	</insert>
	
	<update id="updateHit" parameterType="int">
		UPDATE S_GROUP
		   SET HIT = HIT + 1
		 WHERE STUD_NO = #{studNo}
	</update>
	 
	 <!-- 고칠것들 -->
	 <select id="selectStudyByNo" parameterType="int" resultType="StudyGroupDTO">
		SELECT STUD_NO, NICKNAME, TITLE, CONTENT, CREATE_DATE, MODIFY_DATE, HIT, GENDER, REGION, WIDO, GDO, LANG, PEOPLE, CONTACT, STUD_DATE, IP
          FROM S_GROUP
		 WHERE STUD_NO = #{studNo}
	</select>
	
	<update id="updateStudy" parameterType="StudyGroupDTO">
		UPDATE S_GROUP
		   SET TITLE = #{title}
		     , CONTENT = #{content}
		     , MODIFY_DATE = NOW()
		 WHERE STUD_NO = #{studNo}
	</update>

	
	<delete id="deleteStudy" parameterType="int">
		DELETE
		  FROM S_GROUP
		 WHERE STUD_NO = #{studNo}
	</delete>
	
	<select id="selectStudyScroll" parameterType="Map" resultType="StudyGroupDTO">
		SELECT A.ROW_NUM, A.STUD_NO, A.NICKNAME, A.TITLE, A.CONTENT, A.CREATE_DATE, A.MODIFY_DATE, A.HIT, A.GENDER, A.REGION, A.WIDO, A.GDO, A.LANG, A.PEOPLE, A.CONTACT, A.STUD_DATE, A.IP
		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY STUD_NO DESC) AS ROW_NUM, STUD_NO, NICKNAME, TITLE, CONTENT, CREATE_DATE, MODIFY_DATE, HIT, GENDER, REGION, WIDO, GDO, LANG, PEOPLE, CONTACT, STUD_DATE, IP
		          FROM S_GROUP B) A
		 WHERE A.ROW_NUM BETWEEN #{begin} AND #{end}
	</select>
	
	<select id="selectEmployeesUsingPaging" parameterType="Map" resultType="StudyGroupDTO">
		
		<!-- 2. ROW_NUMBER() 함수 사용 -->
		SELECT A.ROW_NUM, A.STUD_NO, A.NICKNAME, A.TITLE, A.CONTENT, A.CREATE_DATE, A.MODIFY_DATE, A.HIT, A.GENDER, A.REGION, A.WIDO, A.GDO, A.LANG, A.PEOPLE, A.CONTACT, A.STUD_DATE, A.IP
		  FROM (SELECT ROW_NUM() OVER(ORDER BY <choose>
													<when test="title=='STUD_NO'">STUD_ID</when>
													<otherwise>${title}</otherwise>
												  </choose> ${order}) AS ROW_NUM, A.ROW_NUM, A.STUD_NO, A.NICKNAME, A.TITLE, A.CONTENT, A.CREATE_DATE, A.MODIFY_DATE, A.HIT, A.GENDER, A.REGION, A.WIDO, A.GDO, A.LANG, A.PEOPLE, A.CONTACT, A.STUD_DATE, A.IP
		          FROM S_GROUP B) A
		 WHERE A.ROW_NUM BETWEEN #{begin} AND #{end}
		  
	</select>
</mapper>
	
	
	
	